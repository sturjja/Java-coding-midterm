Please answer the below core-java Questions:

What is programing language?
A. A programming language is a set of rules and syntax used to write software programs that run on electronic devices and are used to create applications, scripts, and system software, including web apps, mobile apps, desktop software, and games.

What jdk contains or composed of and define each components?
A. JDK, which stands for Java Development Kit, is a free toolkit offered by Oracle that contains a number of resources to assist us in creating Java applications. A few of these tools are a compiler (javac.exe) to convert our written code into bytecode, an archiver (jar.exe) to package and distribute our Java files, and a documentation generator (javadoc.exe) to produce HTML documentation from our Java code (javadoc.exe). The Java Runtime Environment is also included in JDK (JRE). JRE includes both the JVM and the resources required by the JVM to run Java programs.

What is IDE?
A.An IDE for Java is a software application that includes a text editor, a compiler, a debugger, and other tools for comprehensive Java development.

What are the IDEs available in the market to support java?
A. Some IDEs available in the market are  Eclipse, IntelliJ IDEA, and NetBeans.

Explain the entire java life cycle.
A.The life cycle starts with writing code, which is then compiled and packaged into a JAR file. The JAR file is distributed to users or installed on a server. When the application is launched, the necessary classes are loaded into memory, and the application is executed. The JVM manages memory allocation and de-allocation using garbage collection. Debugging and profiling may be required during the development process to identify and fix issues. Maintenance involves making changes as needed, and the life cycle ends when the application is retired.

what is class?
A. A class is a blueprint for creating objects that define their properties and behavior. It contains data fields and methods, and allows for the creation of multiple instances of objects with their own state and behavior.

What is object?
A. In Java, an object is an instance of a class that contains its own state and behavior. It has its own set of properties and methods, which are defined by its class, and can interact with other objects in the program.

What is the entry point of an application?
A. The main method is the entry point of all Java applications. Whenever a Java application is started, the main() method is the first method to be called.

Why main is static?
A. The main method in Java is static because it can be called without creating an object, allowing the JVM to execute it as the program's entry point before any objects are instantiated.

Which class is the superclass of all classes?
A. The Object class in Java is the superclass of all classes, and provides a basic set of methods that all objects inherit

What is difference between path and classpath variables?
A. The path variable is used by the operating system to locate executables, while the classpath variable is used by the Java Virtual Machine to locate Java class files

What is the difference between an Interface and Abstract class?
A. interfaces define a set of methods that a class must implement, while abstract classes provide both implementation and partial implementation for a set of methods. Interfaces can only contain method signatures, while abstract classes can also contain variables and constructors.

Can you make an Object from an Interface and Abstract class? if not how do you use it ?
A. No you can't make an Object from an Interface and Abstract class but you can create objects from concrete classes that implement an interface or extend an abstract class.

what is Access Specifier?
A.In Java, access specifiers are keywords that determine the visibility of classes, methods, and variables. There are four access specifiers: public, private, protected, and default. Public members are accessible from anywhere, private members only from the same class, protected members from subclasses and classes in the same package, and default members from classes in the same package.

What is OOP ? Define each feature of java OOP.
A. OOP in Java means Object-Oriented Programming. It is a programming paradigm that focuses on objects and their interactions. Java implements OOP through classes and objects, where classes define attributes and behaviors of objects. OOP in Java provides inheritance, encapsulation, abstraction, and polymorphism, making code more efficient and maintainable.
Inheritance: Java inheritance is when one class acquires the properties of another class. The class that inherits the properties is called the subclass, and the class that provides the properties is called the superclass.
Encapsulation: Java encapsulation is a mechanism that protects the data of a class from outside access and manipulation. It ensures that data is only accessed and modified through the class's public methods, preventing accidental misuse. Getters/Setters
Abstraction: Abstraction means focusing on the essential features of an object while hiding implementation details. It simplifies complex systems by providing a high-level view. In Java, abstraction is achieved through the use of abstract classes and interfaces.
Polymorphism: Polymorphism is a programming concept that enables objects of different classes to be treated as if they are of the same type. It can be achieved through method overloading and method overriding.

What is Java Package and which package is imported by default?
A. Java packages are used to organize related classes, interfaces, and sub-packages. By default, the java.lang package is imported in all Java programs, so you can use classes such as String and System without importing them.

What is API? Name list of API that you have used so far.
A. API stands for Application Programming Interface. It is a toolset for software developers to create applications by providing them with a standard way to access data or services from other software or hardware systems.
APIs I have used so far are Java SE and Github.

Does java support multiple inheritance, explain why or why not?
A. In Java, multiple inheritance is not supported in the traditional way where a class can inherit from multiple classes. This is due to potential problems such as the diamond problem, where a class inherits conflicting implementations of a method from two or more parent classes. Instead, Java uses interfaces to achieve a form of multiple inheritance.

What is method overloading and when it happens?
A. Method overloading it when 2 methods have the same name but different number of parameters we also call it compile time polymorphism because it happens during compiling time.

Explain exceptions in java and how to handle it.
A. In Java, an exception is an event that occurs during the execution of a program that disrupts the normal flow of instructions. We handle exceptions using try-catch blocks

What is static keyword in java? How it has been used in variables and methods ?
A. The static keyword in Java is utilized to create members at the class level that are shared among all instances of the class, enabling them to be accessed without the requirement of creating an instance of the class. When a variable or method is marked as static in Java, it is associated with the class as a whole, rather than any individual instance of that class. A static method can be called without requiring an instance of the class.

What is final and how it has been used variables and methods?
A. The final keyword in Java is utilized to create constants and make variables, methods, and classes unchangeable. A variable declared as final cannot be altered after initialization, which is ideal for constant values. Declaring a method as final restricts any subclass from modifying its behavior, preventing any change in method behavior.

What is final, finally and finalize?
A. final has a power on variable, class, and methods. final class cannot be overridden
   finalize is a method that belongs to java that is used during garbage collection which pucks up the unused objects
   finally is a keyword associated with try and catch block that is executed anyways

What is a constructor ?
A. A constructor is a method that creates and sets up objects of a class. It is automatically called when an object is created using the new keyword.

Can we have multiple constructors in a class?
A. Yes, overloading.

If we don't have a constructor declared, what is called during the object creation?
A. When a constructor is not explicitly defined in a class, Java compiler generates a default constructor automatically. This constructor initializes all instance variables to their default values and does not require any parameters to be passed.

What is "this" keyword in java ?
A. In Java, "this" is a keyword that points to the current object being used in a method or constructor. It helps distinguish between local and instance variables with the same name. We can use "this" to access the object's instance variables or pass it to other methods or constructors.

What is "super" keyword in java? How many possible way can you use?
A. In Java, "super" is a keyword that is used to refer to the superclass of a class or to call the superclass constructor. There are two ways to use "super" keyword:

What is JVM stand for ?
A. Java Virtual Machine

Is JVM platform independent?
A. Yes JVM is platform independent and can run on various operating systems as long as a compatible JVM is installed. It executes Java bytecode, which is an intermediate code that is platform-neutral and generated by the Java compiler.

What version of java are you using?
A. Java SE-11.

What is JAR stand for ?
A. JAR stands for Java Archive and is a file format used in Java for archiving multiple files into a single file.

What is the difference between JDK and JVM?
A. JDK is used by developers to create and deploy Java applications, while JVM is used to run Java programs on various platforms. The JDK includes the JVM, but the JVM can be installed separately.

What is the difference between JVM and JRE?
A. JRE is a runtime environment that is needed to run Java applications, while JVM is an execution environment that converts Java bytecode into machine code.

What is compile time and run time?
A. compile time is the phase in which the program is translated into machine code, while run time is the phase in which the compiled program is executed on the computer.

What is heap?
A. Heap is a part of the computer's memory used to store objects created during program execution.

How java manage it's memory?
A. The JVM manages the heap memory, and it's used by all threads in the program. The heap size can be changed and monitored with tools to avoid the program from crashing due to a lack of memory.

What is the difference between String, StringBuffer and StringBuilder?
A. To represent a fixed sequence of characters in Java, use a String. If we need to represent a sequence of characters that can be changed in a thread-safe manner,  we use a StringBuffer. If we need to represent a sequence of characters that can be changed in a single-threaded environment and require the best possible performance,  we use a StringBuilder.

What is Singleton class?
A. A Singleton class in Java is a class that can only be instantiated once, and it provides a single point of access to that instance from anywhere in the program.

What is Serialization and Deserialization?
A. Serialization is the process of converting an object into a stream of bytes, which can be stored or transmitted over a network. Deserialization is the process of taking a stream of bytes that represents an object and reconstructing the object from it.

when to use transient variable in java?
A. Transient variable is used to indicate that a variable should not be serialized when an object is transformed into a stream of bytes.

Difference between while and do..while loop?
A. The while loop loops through a block of code as long as a specified condition is true, do...while will execute the code block once, before checking if the condition is true, then it will repeat the loop as long as the condition is true.

What is Enum?
A. An enum is a special "class" that represents a group of constants.

What is Iterator?
A. An iterator is a way to deal with lists. it only applies to collections, not maps. it is another way to access the methods of a list. when you don't want to deal with indices use iterator.

Which one will take more memory, an int or Integer?
A. int because it is primitive.

Why is String Immutable in Java?
A. Immutable means the value of a string cannot be changed. Whenever we update a String variable, we are actually creating a new string and assigning the memory address to the String variable.

What is constructor chaining in Java?
A. Constructor chaining is calling one constructor from another constructor within the same class or the parent class. It's a technique used to perform common initialization tasks.

The difference between Serial and Parallel Garbage Collector?
A. Serial and Parallel are two types of Garbage Collector in Java that automatically free up memory not being used. Serial GC uses one thread and is simple but slower, good for small or limited-memory applications. Parallel GC uses multiple threads and is faster and efficient for larger applications with more memory requirements.

What is JIT stands for?
A. JIT is short for Just-In-Time compiler, a type of compiler used by the JVM to improve the performance of Java applications. The JIT compiler identifies the parts of the bytecode to be compiled to native code based on factors like their frequency of execution and caches the generated native code for reuse in future executions.

Explain Java Heap space and Garbage collection?
A. In Java, heap space is used for dynamic memory allocation of Java objects. Garbage collection is the process by which the JVM automatically removes objects that are no longer being used by the program, freeing up space on the heap.

Can you guarantee the garbage collection process?
A. No because JVM does it automatically.

What is the difference between stack and heap in Java?
A. Stack is used for storing variables declared inside methods or functions, while the heap is used for dynamic memory allocation of Java objects.

What is reflection in java and why is it useful?
A. Reflection is a way to inspect and change the behavior of objects, classes, and interfaces during runtime. It allows a program to analyze and modify its own structure and the structure of other programs or libraries it interacts with.

what is multithreading in java?
A. Multithreading in Java is the capability of a program to execute multiple tasks concurrently, meaning that it can perform multiple actions at the same time by creating multiple independent threads of execution within the same program.

What is the use of synchronization in Java?
A. Synchronization is used to manage access to shared resources among multiple threads. Synchronization prevents race conditions and ensures predictable behavior and consistency in multi-threaded programs.

What is Framework?
A. Framework is a pre-written set of classes, interfaces, and libraries that provide a foundation for developing applications.

What are the testing Framework available in java?
A. jUnit and testNG.
Difference between jUnit and testNG?
A. jUnit and TestNG are both testing frameworks used in Java. TestNG offers more advanced features than jUnit such as the ability to specify test dependencies explicitly, allowing for skipping tests if a dependent test fails, and parallel execution of tests which can lead to faster execution times.

What are the dependencies for this project?
A. pom.xml

what is dependency injection in java?
A. Dependency injection is a design pattern used in Java to achieve loosely coupled code and simplify the management of dependencies between classes. It involves moving the responsibility of creating and providing the dependencies of a class from the class itself to an external source, such as a framework or container.

What is static binding and dynamic binding?
A. Static binding is a process in Java where the compiler can determine at compile-time which method implementation to use for a method call. It happens when the method is called on a specific object or class type, and the compiler selects which method implementation to use based on the object or class type.
Dynamic binding occurs when the method implementation to be used is determined at runtime based on the actual type of the object that the method is called on.







